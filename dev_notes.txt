* To enable Visual Studio Code debugger to have debug access to another thread
  add this to the start of `worker_DAQ._do_work()` and `worker_jobs._do_work()`

  if self.debug:
      import pydevd
      pydevd.settrace(suspend=False)
	  
                      
                      
* Alternative install procedure:
conda create -n liaforge -c conda-forge  --force -y python=3.8.10
conda activate liaforge
pip install -r requirements_alternative.txt
pip install -r requirements.txt --no-deps



* Arduino lockin-amplifier commands

  command             compute LUT     reply                               Remark
  --------------------------------------------------------------------------------

  on																	  Start lock-in
  _on																	  Start lock-in and reset timer to 0

  _freq #.###         no              none
  _offs #.###         no              none
  _ampl #.###         no              none
  _wave #             no              none                                                         
  compute_lut / c     yes             ASCII ['!']                         The reply '!' indicates success

  freq #.###          yes             ASCII [freq]                        Convenience function for use in a serial terminal.
  offs #.###          yes             ASCII [offs]                        Convenience function for use in a serial terminal.
  ampl #.###          yes             ASCII [ampl]                        Convenience function for use in a serial terminal.

  cos / sqr / saw /   yes             ASCII ['Computing LUT... done.']    Convenience functions for use in a serial terminal.
  tri / ecg                           ASCII [waveform]
                                                            
  ref? / ?            no              ASCII [freq, offs, ampl, waveform, N_LUT]

  lut?                no              ASCII [N_LUT, is_LUT_dirty]
                                      BINARY [LUT[]]
                                       
  lut_ascii?          no              ASCII [N_LUT, is_LUT_dirty]
                                      ASCII [LUT[]]